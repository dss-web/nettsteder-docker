#!/bin/sh

set -e  # stops your script if any simple command fails.

source .env

if [ -z "$LOCATION" ] || [ -z "$RESOURCEGROUP" ] || [ -z "$SERVICEPLAN" ] || [ -z "$APPNAME" ]|| [ -z "$ADMINPASSWORD" ] || [ -z "$MYSQLSERVERNAME" ] || [ -z "$MYSQLSKU" ]; then
  echo 'one or more variables are undefined'
  exit 1
fi


## Create

az group create --name $RESOURCEGROUP --location "$LOCATION"

az appservice plan create --name $SERVICEPLAN --resource-group $RESOURCEGROUP --sku S1 --is-linux

az webapp create --resource-group $RESOURCEGROUP --plan $SERVICEPLAN --name $APPNAME --multicontainer-config-type compose --multicontainer-config-file docker-compose-wordpress.yml

az mysql server create --resource-group $RESOURCEGROUP --name $MYSQLSERVERNAME  --location "$LOCATION" --admin-user adminuser --admin-password $ADMINPASSWORD --sku-name $MYSQLSKU --version 5.7

az mysql server firewall-rule create --name allAzureIPs --server $MYSQLSERVERNAME --resource-group $RESOURCEGROUP --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0

az mysql db create --resource-group $RESOURCEGROUP --server-name $MYSQLSERVERNAME --name wordpress


# https://docs.microsoft.com/en-gb/azure/storage/common/storage-account-create?tabs=azure-cli
az storage account create \
    --resource-group $RESOURCEGROUP \
    --name $storageAccountName \
    --location "$LOCATION" \
    --kind $STORAGE \
    --sku $STORAGESKU \
    --enable-large-file-share


storageAccountKey=$(az storage account keys list --resource-group $RESOURCEGROUP --account-name $storageAccountName --query "[0].value" | tr -d '"')

# https://docs.microsoft.com/en-us/azure/storage/files/storage-how-to-use-files-cli

az storage share create --account-name $storageAccountName --account-key $storageAccountKey --name $shareName --quota 512


# https://docs.microsoft.com/en-us/azure/app-service/containers/how-to-serve-content-from-azure-storage
az webapp config storage-account add --resource-group $RESOURCEGROUP --name $APPNAME --custom-id WordPressContent --storage-type AzureFiles --account-name $storageAccountName --share-name $shareName --access-key $storageAccountKey --mount-path /site/wwwroot


## Add Settings

az webapp config appsettings set --resource-group $RESOURCEGROUP --name $APPNAME --settings WORDPRESS_DB_HOST="$MYSQLSERVERNAME.mysql.database.azure.com" WORDPRESS_DB_USER="adminuser@$MYSQLSERVERNAME" WORDPRESS_DB_PASSWORD="$ADMINPASSWORD" WORDPRESS_DB_NAME="wordpress" MYSQL_SSL_CA="BaltimoreCyberTrustroot.crt.pem"

# az webapp config container set --resource-group $RESOURCEGROUP --name $APPNAME --multicontainer-config-type compose --multicontainer-config-file docker-compose-wordpress.yml

az webapp config appsettings set --resource-group $RESOURCEGROUP --name $APPNAME --settings WEBSITES_ENABLE_APP_SERVICE_STORAGE="true"
az webapp config appsettings set --resource-group $RESOURCEGROUP --name $APPNAME --settings WEBAPP_STORAGE_HOME="WordPressContent"

# az webapp config container set --resource-group $RESOURCEGROUP --name $APPNAME --multicontainer-config-type compose --multicontainer-config-file docker-compose-wordpress.yml

az webapp config appsettings set --resource-group $RESOURCEGROUP --name $APPNAME --settings WP_REDIS_HOST="redis"

az webapp config container set --resource-group $RESOURCEGROUP --name $APPNAME --multicontainer-config-type compose --multicontainer-config-file docker-compose-wordpress.yml